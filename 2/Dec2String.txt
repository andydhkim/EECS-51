Dong Hyun Kim
EE/CS 51
Homework #1 Outline


        NAME    Dec2String


; Dec2String
;
;
; Description:      This function converts the 16-bit signed value passed to
;                   it to decimal (5-digits plus sign) and stores it as a string.  
;					The string should contain the <null> terminated decimal 
;					representation of the value in ASCII. The resulting string
;					is stored starting at the memory location indicated by the
;					passed address.
;
; Operation:        The function starts with the largest power of 10 possible
;                   (10000) and loops dividing the number by the power of 10;
;                   the quotient is a digit and the remainder is used in the
;                   next iteration of the loop.  Each loop iteration divides
;                   the power of 10 by 10 until it is 0.  At that point the number
;					has been converted to decimal. Each time a digit is found, it 
;					is converted into a string and added to the address in the 
;					correct order. 
;
;
; Arguments:        a - passed address in SI by value
;					n - passed number in AX by value
; Return Values:    none
;
; Local Variables:  arg         - copy of passed binary value to convert.
;                   digit       - computed decimal digit.
;                   i           - different bytes of address.
;                   pwr10       - current power of 10 being computed.
;                   result      - string version of decimal.
; Shared Variables: None.
; Global Variables: None.
;
; Input:            None.
; Output:           None.
;
; Error Handling:   None.
;
; Algorithms:       Repeatedly divide by powers of 10 and get the remainders
;                   (which are the decimal digits).
; Data Structures:  None.
;
; Known Bugs:       None.
; Limitations:      None.
;
; Revision History: 10/10/16	 Dong Hyun Kim	   initial revision
;
;
;
; Pseudo Code
;
;	result = 0
;	pwr10 = 10000
;	i = 0
;	IF (arg < 0) THEN 
;		a[0] = "-"
;		i += 1
;		arg *= -1
;	WHILE (pwr10 > 0)
;		digit = arg/pwr10
;		result = digit + 48
;		a[i] = result
;		arg = arg MODULO pwr10
;		pwr10 = pwr10/10
;		i += 1
;	ENDWHILE
;	a[i] = 0