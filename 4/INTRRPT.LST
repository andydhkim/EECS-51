8086/87/88/186 MACRO ASSEMBLER    INTRRPT                                                  12:27:48  10/29/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE INTRRPT
OBJECT MODULE PLACED IN INTRRPT.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE INTRRPT.ASM M1 DB EP


LOC  OBJ                  LINE     SOURCE

                             1            NAME  Intrrpt
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                   Intrrpt                                  ;
                             6     ;                         Interrupt Handler Functions                        ;
                             7     ;                                                                       EE/CS 51
                                                                                               ;
                             8     ;                                                                            ;
                             9     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            10     
                            11     
                            12     ; Description:  This file includes two interrupt handler functions for Timer2. 
                            13     ;               For all interrupt vectors, it installs the IllegalEventHandler, 
                            14     ;               which does nothing and returns after sending a non-specific EOI. 
                            15     ;                               
                            16     ; Table of Contents:
                            17     ;       IllegalEventHandler:  Event handler for uninitialized interrupts. Returns
                            18     ;                         after sending a non-specific EOI.
                            19     ;       ClrIRQVectors:        Installs the IllegalEventHandler for all interrupt
                            20     ;                         vectors in the interrupt vector table.
                            21     ;   
                            22     ; Revision History:
                            23     ;   01/27/16    Dong Hyun Kim       initial revision
                            24     ;   01/27/16    Dong Hyun Kim       updated functional specification
                            25     
                            26     
                            27     
                            28     ; local include files
                            29 +1  $INCLUDE(Intrrpt.INC)
                      =1    30     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    31     ;                                                                            ;
                      =1    32     ;                                 Intrrpt.INC                                ;
                      =1    33     ;                         Interrupt Handler Functions                        ;
                      =1    34     ;                                 Include File                               ;
                      =1    35     ;                                                                            ;
                      =1    36     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      =1    37     
                      =1    38     ; This file contains the definitions for the Interrupt Handler Functions program, 
                      =1    39     ; (Intrrpt.ASM).
                      =1    40     ;
                      =1    41     ; Revision History:
                      =1    42     ;   10/27/16    Dong Hyun Kim       initial revision
                      =1    43     
                      =1    44     
                      =1    45     ; Interrupt Controller Definitions
                      =1    46     
                      =1    47     ; Addresses
  FF22                =1    48     INTCtrlrEOI     EQU     0FF22H          ;address of interrupt controller EOI register
                      =1    49     
8086/87/88/186 MACRO ASSEMBLER    INTRRPT                                                  12:27:48  10/29/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    50     ; Register Values
  8000                =1    51     NonSpecEOI      EQU     08000H          ;Non-specific EOI command
                      =1    52     
                      =1    53     ; General Definitions
  0001                =1    54     FIRST_RESERVED_VEC          EQU     1       ;reserve vectors 1-3
  0003                =1    55     LAST_RESERVED_VEC           EQU     3
                            56     
                            57     
                            58     
                            59     CGROUP  GROUP   CODE
                            60     
                            61     
----                        62     CODE    SEGMENT PUBLIC 'CODE'
                            63     
                            64     
                            65             ASSUME  CS:CGROUP
                            66     
                            67     
                            68                     
                            69     
                            70     ; IllegalEventHandler
                            71     ;
                            72     ; Description:          This procedure is the event handler for illegal
                            73     ;                       (uninitialized) interrupts.  It does nothing - it just
                            74     ;                       returns after sending a non-specific EOI.
                            75     ;
                            76     ; Operation:            Send a non-specific EOI and return.
                            77     ;
                            78     ; Arguments:            None.
                            79     ; Return Value:         None.
                            80     ;
                            81     ; Local Variables:      None.
                            82     ; Shared Variables:     None.
                            83     ; Global Variables:     None.
                            84     ;
                            85     ; Input:                None.
                            86     ; Output:               None.
                            87     ;
                            88     ; Error Handling:       None.
                            89     ;
                            90     ; Algorithms:           None.
                            91     ; Data Structures:      None.
                            92     ;
                            93     ; Registers Changed:    None.
                            94     ; Limitations:          None.
                            95     ; Known Bugs:           None.
                            96     ; Stack Depth:          2 words
                            97     ;
                            98     ; Special Notes:        None.
                            99     ;
                           100     ; Revision History:     10/27/16    Dong Hyun Kim   initial revision
                           101     
0000                       102     IllegalEventHandler     PROC    NEAR
                           103                             PUBLIC  IllegalEventHandler
                           104     
8086/87/88/186 MACRO ASSEMBLER    INTRRPT                                                  12:27:48  10/29/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

0000 90                    105             NOP                             ;do nothing (can set breakpoint here)
                           106     
0001 50                    107             PUSH    AX                      ;save the registers
0002 52                    108             PUSH    DX
                           109     
0003 BA22FF                110             MOV     DX, INTCtrlrEOI         ;send a non-specific EOI to the
0006 B80080                111             MOV     AX, NonSpecEOI          ;   interrupt controller to clear out
0009 EE                    112             OUT     DX, AL                  ;   the interrupt that got us here
                           113     
000A 5A                    114             POP     DX                      ;restore the registers
000B 58                    115             POP     AX
                           116     
000C CF                    117             IRET                            ;and return
                           118     
                           119     
                           120     IllegalEventHandler     ENDP
                           121     
                           122     
                           123     
                           124     
                           125     ; ClrIRQVectors
                           126     ;
                           127     ; Description:          This functions installs the IllegalEventHandler for all
                           128     ;                       interrupt vectors in the interrupt vector table.  Note
                           129     ;                       that all 256 vectors are initialized so the code must be
                           130     ;                       located above 400H.  The initialization skips  (does not
                           131     ;                       initialize vectors) from vectors FIRST_RESERVED_VEC to
                           132     ;                       LAST_RESERVED_VEC.
                           133     ;
                           134     ; Operation:            The function clears ES (since interrupt vectors are in
                           135     ;                       segment 0), initializes SI to 0, and sets the vector 
                           136     ;                       counter to 256. It then enters a loop where it stores the
                           137     ;                       vector if it is before the start of a reserved field; if 
                           138     ;                       it is in the reserved field, the pointer is updated to
                           139     ;                       the next vector and the loop continues until all the
                           140     ;                       vectors are cleared.
                           141     ;
                           142     ; Arguments:            None.
                           143     ; Return Value:         None.
                           144     ;
                           145     ; Local Variables:      CX    - vector counter.
                           146     ;                       ES:SI - pointer to vector table.
                           147     ; Shared Variables:     None.
                           148     ; Global Variables:     None.
                           149     ;
                           150     ; Input:                None.
                           151     ; Output:               None.
                           152     ;
                           153     ; Error Handling:       None.
                           154     ;
                           155     ; Algorithms:           None.
                           156     ; Data Structures:      None.
                           157     ;
                           158     ; Registers Changed:    flags, AX, CX, SI, ES
                           159     ; Limitations:          None.
8086/87/88/186 MACRO ASSEMBLER    INTRRPT                                                  12:27:48  10/29/;6  PAGE    4


LOC  OBJ                  LINE     SOURCE

                           160     ; Known Bugs:           None.
                           161     ; Stack Depth:          1 word
                           162     ;
                           163     ; Special Notes:        None.
                           164     ;
                           165     ; Revision History:     10/27/16    Dong Hyun Kim   initial revision
                           166     
000D                       167     ClrIRQVectors   PROC    NEAR
                           168                     PUBLIC  ClrIRQVectors
                           169     
                           170     
000D                       171     InitClrVectorLoop:                  ;set up to store the same handler 256 times
000D 33C0                  172             XOR     AX, AX              ;clear ES (interrupt vectors are in segment 0)
000F 8EC0                  173             MOV     ES, AX
0011 BE0000                174             MOV     SI, 0               ;initialize SI to skip RESERVED_VECS (4 bytes eac
                                   h)
                           175     
0014 B90001                176             MOV     CX, 256             ;up to 256 vectors to initialize
                           177     
                           178     
0017                       179     ClrVectorLoop:                      ;loop clearing each vector
                           180                                         ;check if should store the vector
0017 83FE04                181             CMP     SI, 4 * FIRST_RESERVED_VEC
001A 7205                  182             JB              DoStore                         ;if before start of reserved 
                                   field - store it
001C 83FE0C                183             CMP             SI, 4 * LAST_RESERVED_VEC
001F 760B                  184             JBE             DoneStore                       ;if in the reserved vectors -
                                    don't store it
                           185             ;JA             DoStore                         ;otherwise past them - so do 
                                   the store
                           186     
0021                       187     DoStore:                            ;store the vector
0021 26C7040000     R      188             MOV     ES: WORD PTR [SI], OFFSET(IllegalEventHandler)
0026 26C74402----   R      189             MOV     ES: WORD PTR [SI + 2], SEG(IllegalEventHandler)
                           190     
002C                       191     DoneStore:                                                  ;done storing the vector
002C 83C604                192             ADD     SI, 4               ;update pointer to next vector
                           193     
002F E2E6                  194             LOOP    ClrVectorLoop       ;loop until have cleared all vectors
                           195             ;JMP    EndClrIRQVectors    ;and all done
                           196     
                           197     
0031                       198     EndClrIRQVectors:                   ;all done, return
0031 C3                    199             RET
                           200     
                           201     
                           202     ClrIRQVectors   ENDP
                           203     
                           204     
                           205     
                           206     
----                       207     CODE    ENDS
                           208     
                           209     
                           210     
8086/87/88/186 MACRO ASSEMBLER    INTRRPT                                                  12:27:48  10/29/;6  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           211             END

ASSEMBLY COMPLETE, NO ERRORS FOUND
